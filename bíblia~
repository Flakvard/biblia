#!/bin/bash

books=("Fyrsta Mósebók" "Onnur Mósebók" "Triðja Mósebók" "Fjórða Mósebók" "Fimta Mósebók" "Jósvabók" "Dómarabókin" "Rutarbók" "Fyrra Sámuelsbók" "Seinna Sámuelsbók" "Fyrra Kongabók" "Seinna Kongabók" "Fyrra Krýnikubók" "Seinna Krýnikubók" "Ezra" "Nehemia" "Esterarbók" "Jobsbók" "Sálmarnir" "Orðtøk Sálomons" "Prædikarin" "Hásongurin" "Jesaja" "Jeremia" "Harmljóðini" "Ezekiel" "Dánjal" "Hósea" "Jóel" "Ámos" "Óbadia" "Jónas" "Mika" "Náhum" "Hábakkuk" "Sefanja" "Haggai" "Zakarja" "Málaki" "Evangeliið eftir Matteus" "Evangeliið eftir Markus" "Evangeliið eftir Lukas" "Evangeliið eftir Jóhannes" "Ápostlasøgan" "Bræv Paulusar ápostuls til Rómverja" "Fyrra bræv Paulusar ápostuls til Korintmanna" "Seinna bræv Paulusar ápostuls til Korintmanna" "Bræv Paulusar ápostuls til Galatamanna" "Bræv Paulusar ápostuls til Efesusmanna" "Bræv Paulusar ápostuls til Filippimanna" "Bræv Paulusar ápostuls til Kolossumanna" "Fyrra bræv Paulusar ápostuls til Tessalónikumanna" "Seinna bræv Paulusar ápostuls til Tessalónikumanna" "Fyrra bræv Paulusar ápostuls til Timoteusar" "Seinna bræv Paulusar ápostuls til Timoteusar" "Bræv Paulusar ápostuls til Titusar" "Bræv Paulusar ápostuls til Filemons" "Brævið til Hebreara" "Hitt almenna bræv Jákups" "Hitt fyrra almenna bræv Pæturs" "Hitt seinna almenna bræv Pæturs" "Hitt fyrsta almenna bræv Jóhannesar" "Annað bræv Jóhannesar" "Triðja bræv Jóhannesar" "Hitt almenna bræv Judasar" "Jóhannesar opinbering")

enBooks=("Genesis" "Exodus" "Leviticus" "Numbers" "Deuteronomy" "Joshua" "Judges" "Ruth" "1 Samuel" "2 Samuel" "1 Kings" "2 Kings" "1 Chronicles" "2 Chronicles" "Ezra" "Nehemiah" "Esther" "Job" "Psalms" "Proverbs" "Ecclesiastes" "Song of Solomon" "Isaiah" "Jeremiah" "Lamentations" "Ezekiel" "Daniel" "Hosea" "Joel" "Amos" "Obadiah" "Jonah" "Micah" "Nahum" "Habakkuk" "Zephaniah" "Haggai" "Zechariah" "Malachi" "Matthew" "Mark" "Luke" "John" "Acts" "Romans" "1 Corinthians" "2 Corinthians" "Galatians" "Ephesians" "Philippians" "Colossians" "1 Thessalonians" "2 Thessalonians" "1 Timothy" "2 Timothy" "Titus" "Philemon" "Hebrews" "James" "1 Peter" "2 Peter" "1 John" "2 John" "3 John" "Jude" "Revelation")

function display_usage() {
  echo "Usage: bíblia [-e] [-l] <bók> <kap> <vers> <vers>" >&2 
  echo "Brúksháttur: bíblia les Guðs heilaga orð á terminalinum" >&2 
  echo "Options:"
  echo "    -e    Leita enska heiti á bókini"
  echo "    -l    Lista av øllum bøkrunum"
  echo "" >&2 
  echo "Dømir default:" >&2 
  echo "Evangeliið eftir Markus, Kap 3" >&2 
  echo "    bíblia mark 3" >&2 
  echo "Evangeliið eftir Matteus, Kap 3, Vers 16:" >&2 
  echo "    bíblia matt 3 16" >&2 
  echo "Evangeliið eftir Lukas, Kap 4, Vers 15 til Vers 19" >&2 
  echo "    bíblia luk 4 15 19" >&2 
  echo "Sálmarnir, sálmur 108" >&2 
  echo "    bíblia sálm 108" >&2 
  echo "Evangeliið eftir Jóhannes, Kap 1, Vers 12 til Vers 24" >&2 
  echo "    bíblia jóhan 1 12 24" >&2
  echo "            1) Evangeliið eftir Jóhannes		3) Annað bræv Jóhannesar		5) Jóhannesar opinbering" >&2
  echo "            2) Hitt fyrsta almenna bræv Jóhannesar	4) Triðja bræv Jóhannesar" >&2
  echo "    Choose a book (enter number): 1" >&2
  echo "" >&2 
  echo "Dømir [-l]:" >&2 
  echo "Lista allar bøkurnar á FØ og EN:" >&2 
  echo "    bíblia -l" >&2 
  echo "Lista allar bøkurnar á FØ og EN:" >&2 
  echo "    bíblia -l pro" >&2 
  echo "    Orðtøk Sálomons	Proverbs" >&2 
  echo "bíblia liggur í path: "$0
}

# Function to display books in two columns as a table
function display_books() {
  local num_books=${#books[@]}
  local num_columns=2
  local col_width=40

  for ((i = 0; i < num_books; i+=num_columns)); do
    local faroese=${books[i]}
    local english=${enBooks[i]}
    printf "%s\t%s\n" "$faroese" "    $english"
  done | column -t -s $'\t' -o ' | ' -c $((col_width * 2 + 3))
}


use_english_books=false

# Check if the -l option is provided
if [ "$1" = "-l" ]; then
  if [ -n "$2" ]; then
    # If search term is provided, iterate through both book arrays and grep approximate book names
    search_term=$(echo "$2" | tr '[:upper:]' '[:lower:]')
    for ((i = 0; i < ${#books[@]}; i++)); do
      faroese=${books[i]}
      english=${enBooks[i]}
      if [[ "$(echo $faroese | tr '[:upper:]' '[:lower:]')" =~ "$search_term" ]] || [[ "$(echo $english | tr '[:upper:]' '[:lower:]')" =~ "$search_term" ]]; then
        echo -e "$faroese\t$english"
      fi
    done
  else
    # If no search term is provided, display all books in two columns
    display_books
  fi
else

  # Check if the -e option is provided
  if [ "$1" = "-e" ]; then
    use_english_books=true
    shift
  fi

  if [ $# -eq 0 ] ; then 
    display_usage
    exit 1 
  fi 

  search_term="$1"  # Use the first argument passed to the script as the search term
  chapter="$2"      # Use the second argument as the chapter number
  verse="$3"        # Use the third argument as the verse number
  verse2="$4"        # Use the fourth argument as the verse number


  # Check if the book name is English or Faroese based on the -e option
  if "$use_english_books"; then

    # Create an array for matching en books
    ENmatching_books=()

    # Check for matches and add them to the array
    for enbook in "${enBooks[@]}"; do
        echo "$enbook" | grep -Fiq "$1"
        if echo "$enbook" | grep -Fiq "$1"; then
            ENmatching_books+=("$enbook")
        fi
    done

    # Check the number of matches
    num_matches="${#ENmatching_books[@]}"

    # If there are no matches, exit
    if [ "$num_matches" -eq 0 ]; then
        echo "Error: Invalid English book name provided."
        echo "No matches found for '$search_term'."
        exit 1
    fi

    # If there is only one match, store it in the variable directly
    if [ "$num_matches" -eq 1 ]; then
        chosen_book="${ENmatching_books[0]}"
    else
        # If there are multiple matches, prompt the user to choose one
        PS3="Choose a book (enter number): "
        select chosen_book in "${matching_books[@]}"; do
            if [ -n "$chosen_book" ]; then
                break
            else
                echo "Invalid choice. Please select a number from the menu."
            fi
        done
    fi

    # Convert the English book name to the corresponding Faroese book name
    index=-1

    for ((i = 0; i < ${#enBooks[@]}; i++)); do if [ "${enBooks[i]}" = "$chosen_book" ]; then
        index=$i
        break
      fi
    done

    if [ "$index" -ne -1 ]; then
      faroese_name=${books[index]}
      search_term=$faroese_name
      echo "EN: "$chosen_book
      echo "FO: "$search_term
    else
      echo "Error: English book name not found."
      exit 1
    fi
    # exit en to fo function
  fi


  # Create an array to store matches
  matching_books=()


  # Check for matches and add them to the array
  for book in "${books[@]}"; do
      if echo "$book" | grep -Fiq "$search_term"; then
          matching_books+=("$book")
      fi
  done

  # Check the number of matches
  num_matches="${#matching_books[@]}"

  # If there are no matches, exit
  if [ "$num_matches" -eq 0 ]; then
      echo "No matches found for '$search_term'."
      exit 1
  fi

  # If there is only one match, store it in the variable directly
  if [ "$num_matches" -eq 1 ]; then
      chosen_book="${matching_books[0]}"
  else
      # If there are multiple matches, prompt the user to choose one
      PS3="Choose a book (enter number): "
      select chosen_book in "${matching_books[@]}"; do
          if [ -n "$chosen_book" ]; then
              break
          else
              echo "Invalid choice. Please select a number from the menu."
          fi
      done
  fi

  # Use awk to extract the text for the given chapter and verse from the output.txt file
  if [ $# -eq 4 ] ; then
    # prints book, chapter and specific verse to another verse
    awk -F '\t' -v book="$chosen_book" -v chap="$chapter" -v vrs1="v$verse" -v vrs2="v$verse2" '
    function strip_v(verse) {
      sub(/^v/, "", verse)
      return verse
    }

    $1 == book && $2 == chap && strip_v($3) >= strip_v(vrs1) && strip_v($3) <= strip_v(vrs2) {
      verse = strip_v($3)
      print $3" "$4
      found=1
    }
    END { if (!found) print "einki vers funnid" }
  ' biblia.txt

  fi
  if [ $# -eq 3 ] ; then
    # prints book, chapter and specifik verse
    awk -F '\t' -v book="$chosen_book" -v chap="$chapter" -v vrs="v$verse" '
    $1 == book && $2 == chap && $3 == vrs {
      print $3" "$4; found=1
    } 
    END { if (!found) print "einki vers funnid"}' biblia.txt
  fi
  if [ $# -eq 2 ] ; then
    # prints book and specifik chapter 
    awk -F '\t' -v book="$chosen_book" -v chap="$chapter" '
    $1 == book && $2 == chap {
      print $3" "$4; found=1
    } 
    END { if (!found) print "einki vers funnid"}' biblia.txt
  fi
fi

